#!/bin/sh
# Splits each line of my bookmarks file into an option to be passed into dmenu,
# the selected value in dmenu is used to load up a new window/tab in the selected
# browser

VERTICALLINES=""
MONITOR=""
FONT=""
BACKGROUNDCOLOR=""
SELECTEDBACKGROUNDCOLOR=""
FOREGROUNDCOLOR=""
SELECTEDFOREGROUNDCOLOR=""
SEPERATOR=""
BOOKMARKS=""
CONFIG=""
COMMAND=""
PROMPT=""

DEFAULTVERTICALLINES=""
DEFAULTMONITOR=""
DEFAULTFONT="Mono-12"
DEFAULTBACKGROUNDCOLOR="#1d1f21"
DEFAULTSELECTEDBACKGROUNDCOLOR="#444"
DEFAULTFOREGROUNDCOLOR="#d8dee9"
DEFAULTSELECTEDFOREGROUNDCOLOR="#268bd2"
DEFAULTSEPERATOR=":"
DEFAULTBOOKMARKS=~/.config/bookmenu/bookmarks
DEFAULTCONFIG=~/.config/bookmenu/config
DEFAULTCOMMAND="$BROWSER"
DEFAULTPROMPT="Select a bookmark"

LASTOPTION=""

helppage() {
  echo "Future Help Page"
}

handleoption() {
  # Handle invalid arguments
  if echo "$1" | grep -Eq '\-(m|l|p|fn|nb|sb|sf|co|c|b|s)'; then
    LASTOPTION=$var
  elif echo "$1" | grep -Eq '\-h'; then
    helppage
    exit
  else
    echo "Invalid option"
    exit
  fi
}

handleargument() {
  if [ ! -z $LASTOPTION ]; then
    case "$LASTOPTION" in
      -l) VERTICALLINES="$1" ;;
      -m) MONITOR="$1" ;;
      -p) PROMPT="$1" ;;
      -fn) FONT="$1" ;;
      -nb) BACKGROUNDCOLOR="$1" ;;
      -nf) FOREGROUNDCOLOR="$1" ;;
      -sb) SELECTEDBACKGROUNDCOLOR="$1" ;;
      -sf) SELECTEDFOREGROUNDCOLOR="$1" ;;
      -b) BOOKMARKS="$1" ;;
      -c) CONFIG="$1" ;;
      -co) COMMAND="$1" ;;
      -s) SEPERATOR="$1" ;;
      *) echo "Invalid option"
  esac
  else
    echo "No option to assign this argument to"
    exit
  fi
  LASTOPTION=""
}

# Handle the arguments
for var in "$@"
do
  case "$var" in
    -*) handleoption "$var" ;;
    *) handleargument "$var" ;;
  esac
done

if [ -z $CONFIG ]; then CONFIG=$DEFAULTCONFIG; fi

# Handle config
while read line; do
  value=$(echo $line | sed "s/.*=//")
  case "$line" in
    VERTICAL_LINES=*) VERTICALLINES=$value ;;
    MONITOR=*) MONITOR=$value ;;
    FONT=*) FONT=$value ;;
    BACKGROUND_COLOR=*) BACKGROUNDCOLOR=$value ;;
    SELECTED_BACKGROUND_COLOR=*) SELECTEDBACKGROUNDCOLOR=$value ;;
    FOREGROUND_COLOR=*) FOREGROUNDCOLOR=$value ;;
    SELECTED_FOREGROUND_COLOR=*) SELECTEDFOREGROUNDCOLOR=$value ;;
    SEPERATOR=*) SEPERATOR=$value ;;
    BOOKMARKS_LOCATION=*) BOOKMARKS=$value ;;
    COMMAND=*) COMMAND=$value ;;
    PROMPT_TEXT=*) PROMPT=$value ;;
    *) echo "Invalid configuration";;
  esac
done < $CONFIG

# Fill in rest with defaults
if [ -z $VERTICALLINES ]; then VERTICALLINES=$DEFAULTVERTICALLINES; fi
if [ -z $MONITOR ]; then MONITOR=$DEFAULTMONITOR; fi
if [ -z $FONT ]; then FONT=$DEFAULTFONT; fi
if [ -z $BACKGROUNDCOLOR ]; then BACKGROUNDCOLOR=$DEFAULTBACKGROUNDCOLOR; fi
if [ -z $SELECTEDBACKGROUNDCOLOR ]; then SELECTEDBACKGROUNDCOLOR=$DEFAULTSELECTEDBACKGROUNDCOLOR; fi
if [ -z $FOREGROUNDCOLOR ]; then FOREGROUNDCOLOR=$DEFAULTFOREGROUNDCOLOR; fi
if [ -z $SELECTEDFOREGROUNDCOLOR ]; then SELECTEDFOREGROUNDCOLOR=$DEFAULTSELECTEDFOREGROUNDCOLOR; fi
if [ -z $SEPERATOR ]; then SEPERATOR=$DEFAULTSEPERATOR; fi
if [ -z $BOOKMARKS ]; then BOOKMARKS=$DEFAULTBOOKMARKS; fi
if [ -z $COMMAND ]; then COMMAND=$DEFAULTCOMMAND; fi
if [ -z $PROMPT ]; then PROMPT=$DEFAULTPROMPT; fi

bookmark=$(sort $BOOKMARKS | sed "s/$SEPERATOR.*//" | dmenu -i -p "$PROMPT" -fn "$FONT" -l "$VERTICALLINES" -m "$MONITOR" -nb "$BACKGROUNDCOLOR" -nf "$FOREGROUNDCOLOR" -sb "$SELECTEDBACKGROUNDCOLOR" -sf "$SELECTEDFOREGROUNDCOLOR" | xargs -I % grep "%$SEPERATOR" $BOOKMARKS | sed "s/.*$SEPERATOR//;")

if [ -z $bookmark ]; then
  echo "No bookmark selected"
  exit
fi

# Handle urls to the file system
filesystem() {
  if case $bookmark in ~/*) ;; *) false;; esac; then
    $COMMAND $bookmark
  else
    fullpath="$HOME/$(echo $bookmark | sed "s/~\///")"
    echo "$fullpath"
    $COMMAND $fullpath
  fi
}

# Handle urls to a website
website() {
  $COMMAND $bookmark
}

case "$bookmark" in
  ~\/*|\/*) filesystem ;;
  *) website ;;
esac
