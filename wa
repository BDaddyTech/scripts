#!/bin/sh -

parameter=$1

help() {
    echo -e "wa without any parameters will load all anime in the main folder \nUse -n to pattern match a name"
}

open_mpv() {
    file=$1

    if [ -z "$file" ]
    then
        /c/"Program Files"/mpv/mpv.exe --fs *[.mp4\|.mpv\|.mkv]
    else
        echo "$file"
        #/c/"Program Files"/mpv/mpv.exe --fs *[.mp4\|.mpv\|.mkv]
    fi
}

enter_path() {
    while true; do
        read -p "Enter the path you would like to search for videos in: " answer
        if [ -z "$answer" ] 
        then
            echo "No path entered"
        else 
            cd "$answer" 
            break
        fi
    done
}

load_anime() {
    name=$1

    # No name entered
    if [ -z "$name" ]
    then
        # List all videos in current directory
        ls *[.mp4\|.mpv\|.mkv]

        # Prompt user for file name
        while true; do
            read -p "Enter a full or partial file name to load: " answer
            if [ -z "$answer" ]
            then
                echo "No file name entered" 
            else
                open_mpv $answer 
                break
            fi
        done
    # Load named file
    else
        open_mpv $name
    fi
}

# Open help
if [ -z "$parameter" ]
then
    cd ~/Videos/Anime
    open_mpv
# No parameter then open all mainfolder anime 
elif [ "$parameter" = "-h" ]
then
    help 
# Only open anime with pattern matched name
elif [ "$parameter" = "-n" ]
then
    cd ~/Videos/Anime
    load_anime $2
    
# Load all videos in a specified folder
elif [ "$parameter" = "-p" ]
then
    # No path entered
    if [ -z "$3" ]
    then
        enter_path 
    # cd into the entered path
    else
        cd $3
    fi
elif [ "$parameter" = "-pn" ]
then
    # Propmpt user for path to go to 
    enter_path    
else 
    echo "Unsupported command, type wa -h for help"
fi
